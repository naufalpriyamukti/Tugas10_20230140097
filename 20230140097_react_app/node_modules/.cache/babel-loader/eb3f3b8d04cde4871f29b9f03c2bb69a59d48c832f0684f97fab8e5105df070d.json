{"ast":null,"code":"const express = require(\"express\");\nconst mysql = require(\"mysql\");\nconst bodyParser = require(\"body-parser\");\nconst cors = require(\"cors\");\nconst authRoutes = require(\"./routes/auth\"); // Impor rute otentikasi\nconst authMiddleware = require(\"./middleware/auth\"); // Impor middleware otentikasi\n\nconst app = express();\nconst port = 5000;\n\n// Middleware\napp.use(cors());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n\n// Koneksi Database\nconst db = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  // Ganti dengan user database Anda\n  password: \"\",\n  // Ganti dengan password database Anda\n  database: \"your_database_name\" // Ganti dengan nama database Anda\n});\ndb.connect(err => {\n  if (err) {\n    console.error(\"Error connecting to database:\", err);\n    return;\n  }\n  console.log(\"MySQL Connected successfully\");\n});\n\n// --- GUNAKAN RUTE OTENTIKASI ---\napp.use(\"/api/auth\", authRoutes);\n\n// Contoh rute yang dilindungi\n// Anda bisa membuat file rute baru (misalnya, `items.js` atau `products.js`)\n// yang menggunakan middleware `authMiddleware`.\napp.get(\"/api/protected\", authMiddleware, (req, res) => {\n  res.json({\n    message: `Halo, ${req.user.email}! Anda memiliki akses ke rute ini.`\n  });\n});\n\n// --- LINDUNGI RUTE DENGAN MIDDLEWARE ---\n// Contoh melindungi rute 'todos' dengan middleware autentikasi\napp.use(\"/api/todos\", authMiddleware, todoRoutes);\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n\n// Jangan lupa untuk mengekspor 'db' jika Anda menggunakannya di file lain\nmodule.exports = db;","map":{"version":3,"names":["express","require","mysql","bodyParser","cors","authRoutes","authMiddleware","app","port","use","json","urlencoded","extended","db","createConnection","host","user","password","database","connect","err","console","error","log","get","req","res","message","email","todoRoutes","listen","module","exports"],"sources":["D:/ARSIP SEMESTER 5/Pertemuan10_PAW/20230140097_react_app/src/pages/Login/LoginPage.js"],"sourcesContent":["const express = require(\"express\");\r\nconst mysql = require(\"mysql\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst cors = require(\"cors\");\r\nconst authRoutes = require(\"./routes/auth\"); // Impor rute otentikasi\r\nconst authMiddleware = require(\"./middleware/auth\"); // Impor middleware otentikasi\r\n\r\nconst app = express();\r\nconst port = 5000;\r\n\r\n// Middleware\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n// Koneksi Database\r\nconst db = mysql.createConnection({\r\n    host: \"localhost\",\r\n    user: \"root\", // Ganti dengan user database Anda\r\n    password: \"\", // Ganti dengan password database Anda\r\n    database: \"your_database_name\" // Ganti dengan nama database Anda\r\n});\r\n\r\ndb.connect(err => {\r\n    if (err) {\r\n        console.error(\"Error connecting to database:\", err);\r\n        return;\r\n    }\r\n    console.log(\"MySQL Connected successfully\");\r\n});\r\n\r\n// --- GUNAKAN RUTE OTENTIKASI ---\r\napp.use(\"/api/auth\", authRoutes);\r\n\r\n// Contoh rute yang dilindungi\r\n// Anda bisa membuat file rute baru (misalnya, `items.js` atau `products.js`)\r\n// yang menggunakan middleware `authMiddleware`.\r\napp.get(\"/api/protected\", authMiddleware, (req, res) => {\r\n    res.json({ message: `Halo, ${req.user.email}! Anda memiliki akses ke rute ini.` });\r\n});\r\n\r\n// --- LINDUNGI RUTE DENGAN MIDDLEWARE ---\r\n// Contoh melindungi rute 'todos' dengan middleware autentikasi\r\napp.use(\"/api/todos\", authMiddleware, todoRoutes);\r\n\r\napp.listen(port, () => {\r\n    console.log(`Server running on http://localhost:${port}`);\r\n});\r\n\r\n// Jangan lupa untuk mengekspor 'db' jika Anda menggunakannya di file lain\r\nmodule.exports = db;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMI,UAAU,GAAGJ,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AAC7C,MAAMK,cAAc,GAAGL,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;;AAErD,MAAMM,GAAG,GAAGP,OAAO,CAAC,CAAC;AACrB,MAAMQ,IAAI,GAAG,IAAI;;AAEjB;AACAD,GAAG,CAACE,GAAG,CAACL,IAAI,CAAC,CAAC,CAAC;AACfG,GAAG,CAACE,GAAG,CAACN,UAAU,CAACO,IAAI,CAAC,CAAC,CAAC;AAC1BH,GAAG,CAACE,GAAG,CAACN,UAAU,CAACQ,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;;AAElD;AACA,MAAMC,EAAE,GAAGX,KAAK,CAACY,gBAAgB,CAAC;EAC9BC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,MAAM;EAAE;EACdC,QAAQ,EAAE,EAAE;EAAE;EACdC,QAAQ,EAAE,oBAAoB,CAAC;AACnC,CAAC,CAAC;AAEFL,EAAE,CAACM,OAAO,CAACC,GAAG,IAAI;EACd,IAAIA,GAAG,EAAE;IACLC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;IACnD;EACJ;EACAC,OAAO,CAACE,GAAG,CAAC,8BAA8B,CAAC;AAC/C,CAAC,CAAC;;AAEF;AACAhB,GAAG,CAACE,GAAG,CAAC,WAAW,EAAEJ,UAAU,CAAC;;AAEhC;AACA;AACA;AACAE,GAAG,CAACiB,GAAG,CAAC,gBAAgB,EAAElB,cAAc,EAAE,CAACmB,GAAG,EAAEC,GAAG,KAAK;EACpDA,GAAG,CAAChB,IAAI,CAAC;IAAEiB,OAAO,EAAE,SAASF,GAAG,CAACT,IAAI,CAACY,KAAK;EAAqC,CAAC,CAAC;AACtF,CAAC,CAAC;;AAEF;AACA;AACArB,GAAG,CAACE,GAAG,CAAC,YAAY,EAAEH,cAAc,EAAEuB,UAAU,CAAC;AAEjDtB,GAAG,CAACuB,MAAM,CAACtB,IAAI,EAAE,MAAM;EACnBa,OAAO,CAACE,GAAG,CAAC,sCAAsCf,IAAI,EAAE,CAAC;AAC7D,CAAC,CAAC;;AAEF;AACAuB,MAAM,CAACC,OAAO,GAAGnB,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}